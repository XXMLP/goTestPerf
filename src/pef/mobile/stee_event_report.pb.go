// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stee_event_report.proto

package mobile

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type STEEEvent struct {
	Date                 *Timestamp `protobuf:"bytes,1,req,name=date" json:"date,omitempty"`
	Name                 *string    `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Value                *string    `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *STEEEvent) Reset()         { *m = STEEEvent{} }
func (m *STEEEvent) String() string { return proto.CompactTextString(m) }
func (*STEEEvent) ProtoMessage()    {}
func (*STEEEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b7dd9b0ed1e1146, []int{0}
}

func (m *STEEEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_STEEEvent.Unmarshal(m, b)
}
func (m *STEEEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_STEEEvent.Marshal(b, m, deterministic)
}
func (m *STEEEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_STEEEvent.Merge(m, src)
}
func (m *STEEEvent) XXX_Size() int {
	return xxx_messageInfo_STEEEvent.Size(m)
}
func (m *STEEEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_STEEEvent.DiscardUnknown(m)
}

var xxx_messageInfo_STEEEvent proto.InternalMessageInfo

func (m *STEEEvent) GetDate() *Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *STEEEvent) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *STEEEvent) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type STEEEventReportRequest struct {
	Events               []*STEEEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *STEEEventReportRequest) Reset()         { *m = STEEEventReportRequest{} }
func (m *STEEEventReportRequest) String() string { return proto.CompactTextString(m) }
func (*STEEEventReportRequest) ProtoMessage()    {}
func (*STEEEventReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b7dd9b0ed1e1146, []int{1}
}

func (m *STEEEventReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_STEEEventReportRequest.Unmarshal(m, b)
}
func (m *STEEEventReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_STEEEventReportRequest.Marshal(b, m, deterministic)
}
func (m *STEEEventReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_STEEEventReportRequest.Merge(m, src)
}
func (m *STEEEventReportRequest) XXX_Size() int {
	return xxx_messageInfo_STEEEventReportRequest.Size(m)
}
func (m *STEEEventReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_STEEEventReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_STEEEventReportRequest proto.InternalMessageInfo

func (m *STEEEventReportRequest) GetEvents() []*STEEEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type STEEEventReportResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *STEEEventReportResponse) Reset()         { *m = STEEEventReportResponse{} }
func (m *STEEEventReportResponse) String() string { return proto.CompactTextString(m) }
func (*STEEEventReportResponse) ProtoMessage()    {}
func (*STEEEventReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b7dd9b0ed1e1146, []int{2}
}

func (m *STEEEventReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_STEEEventReportResponse.Unmarshal(m, b)
}
func (m *STEEEventReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_STEEEventReportResponse.Marshal(b, m, deterministic)
}
func (m *STEEEventReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_STEEEventReportResponse.Merge(m, src)
}
func (m *STEEEventReportResponse) XXX_Size() int {
	return xxx_messageInfo_STEEEventReportResponse.Size(m)
}
func (m *STEEEventReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_STEEEventReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_STEEEventReportResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*STEEEvent)(nil), "com.dingxiang.mobile.STEEEvent")
	proto.RegisterType((*STEEEventReportRequest)(nil), "com.dingxiang.mobile.STEEEventReportRequest")
	proto.RegisterType((*STEEEventReportResponse)(nil), "com.dingxiang.mobile.STEEEventReportResponse")
}

func init() { proto.RegisterFile("stee_event_report.proto", fileDescriptor_2b7dd9b0ed1e1146) }

var fileDescriptor_2b7dd9b0ed1e1146 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0x3f, 0x4b, 0xc7, 0x30,
	0x10, 0x86, 0x69, 0x5a, 0x85, 0x9e, 0x83, 0x10, 0x8a, 0x8d, 0x2e, 0x86, 0x4e, 0x9d, 0x32, 0xe8,
	0xe0, 0x2e, 0x14, 0x5c, 0x8d, 0xdd, 0x4b, 0x6a, 0x8f, 0x12, 0x69, 0xfe, 0xd8, 0xa4, 0xc5, 0x8f,
	0x2f, 0xa6, 0xa2, 0x83, 0xfe, 0xb6, 0x3b, 0x78, 0xee, 0x79, 0xef, 0x85, 0x3a, 0x44, 0xc4, 0x01,
	0x77, 0xb4, 0x71, 0x58, 0xd1, 0xbb, 0x35, 0x0a, 0xbf, 0xba, 0xe8, 0x68, 0xf5, 0xea, 0x8c, 0x98,
	0xb4, 0x9d, 0x3f, 0xb4, 0xb2, 0xb3, 0x30, 0x6e, 0xd4, 0x0b, 0xde, 0x5c, 0x26, 0x7c, 0x54, 0x01,
	0x0f, 0xac, 0x79, 0x83, 0xf2, 0xa5, 0xef, 0xba, 0xee, 0x4b, 0x40, 0xef, 0xa1, 0x98, 0x54, 0x44,
	0x96, 0x71, 0xd2, 0x5e, 0xdc, 0xdd, 0x8a, 0xff, 0x14, 0xa2, 0xd7, 0x06, 0x43, 0x54, 0xc6, 0xcb,
	0x04, 0x53, 0x0a, 0x85, 0x55, 0x06, 0x19, 0xe1, 0xa4, 0x2d, 0x65, 0x9a, 0x69, 0x05, 0x67, 0xbb,
	0x5a, 0x36, 0x64, 0x39, 0xcf, 0xda, 0x52, 0x1e, 0x4b, 0xf3, 0x0c, 0x57, 0x3f, 0x59, 0x32, 0xfd,
	0x2a, 0xf1, 0x7d, 0xc3, 0x10, 0xe9, 0x03, 0x9c, 0xa7, 0x0a, 0x81, 0x65, 0x3c, 0x3f, 0x1d, 0xfd,
	0x7b, 0xfd, 0x8d, 0x37, 0xd7, 0x50, 0xff, 0x51, 0x06, 0xef, 0x6c, 0xc0, 0x47, 0xf2, 0x94, 0x7f,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x10, 0x1a, 0x7e, 0x16, 0x1e, 0x01, 0x00, 0x00,
}
